@import url('https://fonts.googleapis.com/css2?family=Roboto&family=Roboto+Mono');

@import url('css/layout.css');
@import url('css/inputs.css');
@import url('css/user.css');
@import url('css/biswitch.css');

body {
	--color-primary: #f7b440;
	--color-secondary: hsl(7, 82%, 63%);

	margin: 0;
	background: linear-gradient(
			-45deg,
			var(--color-primary) 0%,
			var(--color-secondary) 100%
		),
		url('/img/papyrus-dark.png');
	background-blend-mode: difference;
	font-family: Roboto;
}

.logo {
	width: 25%;
	margin-bottom: 3em;
	border-radius: 100%;
	box-shadow: 2px 6px 10px 2px #0005;
}

.badge {
	width: 100%;
	/* border-left: 4px solid var(--color-primary); */
	box-sizing: border-box;
}

.content > :is(h1, h2, h3, h4, h5, h6) {
	width: 100%;
	box-sizing: border-box;
	text-align: center;
	margin-top: unset;
	margin-bottom: 1em;
}

.fields {
	width: 100%;
	display: flex;
	flex-direction: column;
	align-items: center;
	padding: 0.5em 3em;
}

.separator {
	margin: 1em 0;
	text-transform: uppercase;
	font-size: 0.8em;
}

.separator:before,
.separator:after {
	content: '';
	width: calc(50% - 7em);
	height: 0.5em;
	z-index: 1;
	position: absolute;
	left: 1em;
	border-bottom: 1px solid #dddd;
}

.separator:after {
	left: unset;
	right: 1em;
}

.content > .socials {
	display: flex;
	padding: 0.3em 1em;
	box-sizing: border-box;
	flex-direction: row;
	flex-wrap: wrap;
	justify-content: space-between;
}

.content > .socials > .external {
	border: 1px solid white;
	padding: 0.5em 0.2em;
	box-sizing: border-box;
	width: calc(33% - 0.5em);
	text-align: center;
	margin-right: 0.5em;
	user-select: none;
	cursor: pointer;
}

.external.fetched {
	background-color: var(--color-primary);
}

.external[disabled] {
	color: #ccc;
	border-color: #ccc !important;
	box-shadow: 0 0 6px #5555 inset;
}

.status {
	text-align: center;
	margin: 1em 0.5em;
	border-top: unset;
}

.status[data-content=''] {
	display: none;
}

.status:before {
	content: attr(data-content);
}

@keyframes spin {
	from {
		transform: rotate(0deg);
	}
	to {
		transform: rotate(360deg);
	}
}

.status.pending:after {
	content: '';
	position: absolute;
	width: 1em;
	height: 1em;
	border-right: 1px solid white;
	animation: spin 1s infinite linear;
	transform-origin: right;
}

.copy {
	position: relative;
	bottom: 0;
	font-size: 75%;
	margin: 0.5em 0;
	color: #dddd;
}

.return {
	position: absolute;
	left: 0;
	top: 0;
	padding: 1em;
	text-transform: uppercase;
	font-size: 0.8em;
	font-weight: bold;
	cursor: pointer;
}

.return:not(.enabled) {
	display: none;
}

.return::before {
	content: '';
	width: 10px;
	height: 10px;
	transform: rotate(-45deg);
	display: block;
	border: 2px white;
	border-style: solid none none solid;
	bottom: 0;
	margin-right: 0.7em;
	float: left;
}
